"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _effects = require("redux-saga/effects");

var _connect = require("../../actions/connect");

var _disconnect = require("../../actions/disconnect");

function _default(fn) {
  return (0, _effects.call)(
  /*#__PURE__*/
  _regenerator.default.mark(function _callee() {
    var _ref, _ref$meta, userID, username, directLine, task;

    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return (0, _effects.take)(_connect.CONNECT_FULFILLING);

          case 2:
            _ref = _context.sent;
            _ref$meta = _ref.meta;
            userID = _ref$meta.userID;
            username = _ref$meta.username;
            directLine = _ref.payload.directLine;
            _context.next = 9;
            return (0, _effects.fork)(fn, {
              directLine: directLine,
              userID: userID,
              username: username
            });

          case 9:
            task = _context.sent;
            _context.next = 12;
            return (0, _effects.take)(_disconnect.DISCONNECT_PENDING);

          case 12:
            _context.next = 14;
            return (0, _effects.cancel)(task);

          case 14:
            _context.next = 0;
            break;

          case 16:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, this);
  }));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zYWdhcy9lZmZlY3RzL3doaWxlQ29ubmVjdGVkLmpzIl0sIm5hbWVzIjpbImZuIiwiQ09OTkVDVF9GVUxGSUxMSU5HIiwibWV0YSIsInVzZXJJRCIsInVzZXJuYW1lIiwiZGlyZWN0TGluZSIsInBheWxvYWQiLCJ0YXNrIiwiRElTQ09OTkVDVF9QRU5ESU5HIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBOztBQU9BOztBQUNBOztBQUVlLGtCQUFVQSxFQUFWLEVBQWM7QUFDM0IsU0FBTztBQUFBO0FBQUEsNEJBQUs7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRXdELG1CQUFNLG1CQUFLQywyQkFBTCxDQUFOOztBQUZ4RDtBQUFBO0FBQUEsNkJBRUFDLElBRkE7QUFFUUMsWUFBQUEsTUFGUixhQUVRQSxNQUZSO0FBRWdCQyxZQUFBQSxRQUZoQixhQUVnQkEsUUFGaEI7QUFFdUNDLFlBQUFBLFVBRnZDLFFBRTRCQyxPQUY1QixDQUV1Q0QsVUFGdkM7QUFBQTtBQUdLLG1CQUFNLG1CQUFLTCxFQUFMLEVBQVM7QUFBRUssY0FBQUEsVUFBVSxFQUFWQSxVQUFGO0FBQWNGLGNBQUFBLE1BQU0sRUFBTkEsTUFBZDtBQUFzQkMsY0FBQUEsUUFBUSxFQUFSQTtBQUF0QixhQUFULENBQU47O0FBSEw7QUFHRkcsWUFBQUEsSUFIRTtBQUFBO0FBTVIsbUJBQU0sbUJBQUtDLDhCQUFMLENBQU47O0FBTlE7QUFBQTtBQU9SLG1CQUFNLHFCQUFPRCxJQUFQLENBQU47O0FBUFE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQUwsRUFBUDtBQVVEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgY2FsbCxcbiAgY2FuY2VsLFxuICBmb3JrLFxuICB0YWtlXG59IGZyb20gJ3JlZHV4LXNhZ2EvZWZmZWN0cyc7XG5cbmltcG9ydCB7IENPTk5FQ1RfRlVMRklMTElORyB9IGZyb20gJy4uLy4uL2FjdGlvbnMvY29ubmVjdCc7XG5pbXBvcnQgeyBESVNDT05ORUNUX1BFTkRJTkcgfSBmcm9tICcuLi8uLi9hY3Rpb25zL2Rpc2Nvbm5lY3QnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiAoZm4pIHtcbiAgcmV0dXJuIGNhbGwoZnVuY3Rpb24qICgpIHtcbiAgICBmb3IgKDs7KSB7XG4gICAgICBjb25zdCB7IG1ldGE6IHsgdXNlcklELCB1c2VybmFtZSB9LCBwYXlsb2FkOiB7IGRpcmVjdExpbmUgfSB9ID0geWllbGQgdGFrZShDT05ORUNUX0ZVTEZJTExJTkcpO1xuICAgICAgY29uc3QgdGFzayA9IHlpZWxkIGZvcmsoZm4sIHsgZGlyZWN0TGluZSwgdXNlcklELCB1c2VybmFtZSB9KTtcblxuICAgICAgLy8gV2hlbiB3ZSByZWNlaXZlIERJU0NPTk5FQ1RfUEVORElORywgdGhlIERpcmVjdCBMaW5lIGNvbm5lY3Rpb24gaXMgdGVhcmluZyBkb3duIGFuZCBzaG91bGQgbm90IGJlIHVzZWQuXG4gICAgICB5aWVsZCB0YWtlKERJU0NPTk5FQ1RfUEVORElORyk7XG4gICAgICB5aWVsZCBjYW5jZWwodGFzayk7XG4gICAgfVxuICB9KTtcbn1cbiJdfQ==